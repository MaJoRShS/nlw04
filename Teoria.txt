Teoria


Dia 01

API - Aplication Program Interface


Cliente -HTML , CSS

Servidor - BD, autenticação, envio de e-mail


Node.js


Foi utilizado para poder rodar JS no lado do servidor, e ele consegue fazer IO assíncrono, que significa entrada(Input) e saida(Output) de dados de maneira assíncrona.

e essa parada funciona de uma maneira que faz basicamente com que as requisições não bloqueiem as próximas requisições.



TypeScript

É um superset de JavaScript ou seja ele tem varias novas funcionalidades e coisas que deixam o JavaScript ainda mais poderoso.

Basicamente alé dos tipos o TypeScript auxilia no desenvolvimento porque as editores de código forçam você a utilizar o tipo de dado correto.



Instalamos o Express que é um micro-framework que serve para poder fazermos a parte de rotas e middleware do projeto, ajuda a criar um servidor local, além de facilitar e permitir o trabalho com web-sockets

Senha do Insomnia
Ins0mn1a@21!


#rumoaoproximonivel


Dia 02

Aqui ela ta mostrando como podemos fazer as conexões com o banco de dados e alguns tipos de formas de poder fazer a mesma coisa.

uma das formas é o drive nativo de cada banco de dados, e ai tem que ver nada documentação de cada drive como é feita as operações com banco de dados.

tem o tal do Knex.js que basicamente permite que você acesse qualquer banco de dados e ele converte as operações para cada tipo de banco de dados para você mais de vez em quando tu ainda vai precisar fazer as querys na mão, esse cara só facilita que ele permite que tu se conecte com qualquer banco de dados e escreva a sua query do mesmo jeito para qualquer um dos banco de dados.


e tem o tal do typeORM - geralmente ORM (Object-relational mapping) são facilitadores de mapeamento de objeto relacional de banco de dados, ou seja tu vai ter um objeto que vai ser a representação de uma tabela do banco de dados e ai fica bem mais tranquilo de se trabalhar com os dados.


Migration


Basicamente uma migration é como se fosse uma versão do banco de dados que eu to agora, ou seja todas as alterações que eu fizer no meu banco de dados e tudo que eu mexer nas tabelas vão ficar nessas migration's e ai quando eu subir isso ai para PRD ele vai rodar todas as migrations para o banco de dados e deixar tudo equalizado, tanto dev quando prd vão conter a mesma estrutura de tabelas.


Acabamos de complicar a porra toda, estamos trabalhando com JS como se fosse java mesmo, 100% tipado, porém, bem menos verboso igual java, ta começando a ficar "legal".

criamos até um "repository" que nada mais é do que um entity manager, que serve para que eu consiga trabalhar com os dados de uma maneira mais tranquila, ele tem inúmeras vantagens comparados com fazer tudo na mão, claro que é sempre recomendável saber usar ambas as formas.


#jornadainfinita


Dia 03


Aqui estamos separando as responsabilidades de cada coisa e criamos uma repository para a classe "users".

aqui ela usa basicamente um padrão de projeto igual ao JAVA, logo fica tudo muito longo e complicado
mais ta ficando legal, talvez assim eu consiga me familiarizar ainda melhor com java. =D

Testes automatizados

Testes unitários ( backend )

aqui testamos apenas unidades, ou parte de programa, funções básicas, ou apenas uma única funcionalidade


Teste de Integração ( backend )

teste de uma funcionalidade completa, do começo ao fim, ou seja temos que ver se quando começamos a fazer algo aquela funcionalidade está funcionando como deveria, do começo ao fim do fluxo de negócio.


Teste ponta a ponta ( frontend )

Testa toda a ação de um usuário na aplicação, passo a passo do que o cara vai fazer


utilizaremos o "Jest"

Variaveis de ambiente

Podemos utilizar variveis de ambiente para facilitar de alguma forma no desenvolvimento, aqui no caso ela ta utilizando a variavel de ambeinte para poder setar o banco de dados correto quando formos rodar os testes mesmo em produção para não corrermos perigo.



#focopraticagrupo



DIA 04

Envio de E-mail

Aqui ficou muito complexo, muito detalhezinho que ferrou de mais na compreensão e até na execução das paradas, mais vamo que vamo, ainda não termieni o dia , parei no "1:03:21"


Voltamos

Aqui fizemos o envio de e-mail, além disso temos varias formas de relacionar as tabelas dentro do banco de dados, e ainda tem bastante coisa que foi feita, muita parada de modelos ou pradrões de projetos, topzinho.]

#neverstoplearning


DIA 05


Route Params = São os parâmetros que compõem uma rota, eles vem na url

Query Params = São os itens que sempre vem depois da "?" na URL e sempre são compostos por chave = valor

Basicamente é real a mina ta com o padrão java na mente, e por isso utilizamos a parada com o desing patters de java, claro que tem a quela pincelada de JS mais é bem igual as paradas do JAVA.

mais em fim , topper.

#missioncomplete